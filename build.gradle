group 'spring-rest-api-disappear'
version '1.0-SNAPSHOT'

buildscript {
    ext {
        springBootVersion = '2.0.5.RELEASE'
    }
    repositories {
        // NOTE: You should declare only repositories that you need here
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url "http://repo.spring.io/release" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url "http://repo.spring.io/snapshot" }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "com.moowork.gradle:gradle-node-plugin:1.2.0"
    }
}
//apply plugin: 'application'
apply plugin: "com.moowork.node"
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
//mainClassName = "ru.varren.kirsan.App"
sourceCompatibility = 1.8
compileJava.options.encoding = 'UTF-8'

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDir 'src/main/resources'
        }
    }
}

repositories {
    mavenCentral()
    mavenLocal()
    maven { url "http://repo.spring.io/release" }
    maven { url "http://repo.spring.io/milestone" }
    maven { url "http://repo.spring.io/snapshot" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
}
configurations.all {

    exclude group: "commons-logging", module: "commons-logging"
}
dependencies {
//    compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-data-rest:${springBootVersion}")
    //compile("org.springframework.boot:spring-boot-starter-security:${springBootVersion}")
    //compile("org.springframework.boot:spring-boot-starter-websocket:${springBootVersion}")
    //compile("org.springframework.boot:spring-boot-starter-mail:${springBootVersion}")
//    compile("org.springframework.boot:spring-boot-devtools:${springBootVersion}")

    compile group: 'org.hibernate', name: 'hibernate-entitymanager', version: '5.3.6.Final'


    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-hibernate5', version: '2.9.0'

    // compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    // https://mvnrepository.com/artifact/org.thymeleaf/thymeleaf
    compile group: 'org.thymeleaf', name: 'thymeleaf', version: '3.0.9.RELEASE'
// https://mvnrepository.com/artifact/org.thymeleaf/thymeleaf-spring5
    compile group: 'org.thymeleaf', name: 'thymeleaf-spring5', version: '3.0.9.RELEASE'

    // https://mvnrepository.com/artifact/org.thymeleaf.extras/thymeleaf-extras-springsecurity4
    compile group: 'org.thymeleaf.extras', name: 'thymeleaf-extras-springsecurity4', version: '3.0.2.RELEASE'

    //dbases
    compile 'com.h2database:h2:1.4.196'


    compile "org.projectlombok:lombok:1.18.2"


}